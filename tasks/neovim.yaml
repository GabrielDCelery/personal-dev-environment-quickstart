# - name: Add neovim repository
#   ansible.builtin.shell: add-apt-repository ppa:neovim-ppa/unstable -y

# - name: Update apt cache
#   ansible.builtin.apt:
#     update_cache: true
#     cache_valid_time: 3600
#     name: "*"
#     state: present

# - name: Install dependencies
#   ansible.builtin.apt:
#     name: [ "make", "gcc", "ripgrep", "unzip", "git", "xclip" ]
#     state: present

# - name: Install neovim
#   ansible.builtin.shell: brew install neovim -y

- name: Move last version of state, share and cache files to backup
  ansible.builtin.shell: |
    if [ -d $HOME/.local/share/nvim.bak ]; then rm -Rf  $HOME/.local/share/nvim.bak; else echo "No need to delete"; fi
    if [ -d $HOME/.local/share/nvim ]; then mv $HOME/.local/share/nvim $HOME/.local/share/nvim.bak; else echo "No need to copy"; fi

    if [ -d $HOME/.local/state/nvim.bak ]; then rm -Rf  $HOME/.local/state/nvim.bak; else echo "No need to delete"; fi
    if [ -d $HOME/.local/state/nvim ]; then mv $HOME/.local/state/nvim $HOME/.local/state/nvim.bak; else echo "No need to copy"; fi

    if [ -d $HOME/.cache/nvim.bak ]; then rm -Rf  $HOME/.cache/nvim.bak; else echo "No need to delete"; fi
    if [ -d $HOME/.cache/nvim ]; then mv $HOME/.cache/nvim $HOME/.cache/nvim.bak; else echo "No need to copy"; fi

- name: Install neovim dependencies
  community.general.homebrew:
    name:  [ "gcc", "ripgrep", "unzip", "git", "xclip", "llvm" ]
    state: present

- name: Install neovim
  community.general.homebrew:
    name:  neovim
    state: present